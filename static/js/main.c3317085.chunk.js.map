{"version":3,"sources":["Asset.js","Investment.js","App.js","index.js"],"names":["Asset","quantity","this","props","asset","toLocaleString","react_default","a","createElement","className","asset_class","investment_date","cost","$","Component","Investment","state","assetsShown","_this","showing","componentDidUpdate","prevProps","setState","toggleAssets","arrow","shares","investment","issued_assets","reduce","acc","assets","map","src_Asset","key","id","Fragment","onClick","name","App","investments","showingAssets","date","Date","componentDidMount","getInvestments","_callee","response","regenerator_default","wrap","_context","prev","next","convertDate","fetch","sent","json","stop","y","getFullYear","toString","m","getMonth","d","getDate","length","concat","collapseAll","expandAll","setDate","_this2","src_Investment","totalCost","totalShares","es","selected","onChange","todayButton","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c3317085.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Asset extends Component {\n  static propTypes = {\n    asset: PropTypes.object.isRequired,\n  }\n\n  render() {\n    let quantity = this.props.asset.quantity ? (this.props.asset.quantity).toLocaleString() : 0;\n\n    return (\n      <tr className=\"asset\">\n        <td />\n        <td>{this.props.asset.asset_class}</td>\n        <td>{this.props.asset.investment_date}</td>\n        <td>$ {quantity}</td>\n        <td>$ {(this.props.asset.cost.$).toLocaleString()}</td>\n      </tr>\n    )\n  }\n}\n\nexport default Asset;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Asset from \"./Asset\";\n\nclass Investment extends Component {\n  static propTypes = {\n    investment: PropTypes.object.isRequired,\n  }\n\n  state = {\n      assetsShown: this.props.showing,\n  }\n\n  componentDidUpdate = prevProps => {\n    if (prevProps !== this.props) {\n        this.setState({\n            assetsShown: this.props.showing,\n        })\n    }\n  }\n  \n  toggleAssets = () => {\n      this.setState({\n          assetsShown: !this.state.assetsShown,\n      })\n  }\n\n  render() {\n\n    let shares = this.props.investment.issued_assets.reduce((acc, asset) => acc + asset.quantity, 0).toLocaleString();\n    let cost = this.props.investment.issued_assets.reduce((acc, asset) => acc + asset.cost.$, 0).toLocaleString();\n    let assets = this.props.investment.issued_assets.map(asset => <Asset asset={asset} key={asset.id}/>)\n\n    let arrow;\n    this.state.assetsShown === true ?\n        arrow = <i className=\"fas fa-caret-down arrow\"></i> :\n        arrow = <i className=\"fas fa-caret-right arrow\"></i>\n\n    return (\n        <React.Fragment>\n            <tr className=\"investment\">\n                <td><span className=\"expand\" onClick={this.toggleAssets}>{this.props.investment.name}{arrow}</span></td>\n                <td></td>\n                <td></td>\n                <td>$ {shares}</td>\n                <td>$ {cost}</td>\n            </tr>\n            {this.state.assetsShown ? [assets] : null}\n        </React.Fragment>\n    )\n  }\n}\n\nexport default Investment;\n","import React, { Component } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport Investment from './Investment';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass App extends Component {\n  state = {\n    investments: [],\n    showingAssets: true,\n    date: new Date(),\n  };\n\n  componentDidMount = () => {\n    this.getInvestments();\n  }\n\n  // Handles API call for investments\n  getInvestments = async () => {\n    // Convert current picked date to proper format\n    let date = this.convertDate(this.state.date)\n\n    // Ajax call\n    let response = await fetch(\"https://gist.githubusercontent.com/cranium/d8b83184bf0750f2c834760b7c9203dc/raw/a73a70716951f77b90e84b8848ff1fee46938dd1/soi.json?date=\" + date);\n    let investments = await response.json();\n\n    // Set response in state\n    this.setState({\n      investments,\n    })\n  }\n\n  // Method to convert date to YYYY-MM-DD format\n  convertDate = date => {\n      let y = date.getFullYear().toString();\n      let m = (date.getMonth() + 1).toString();\n      let d = date.getDate().toString();\n\n      (d.length === 1) && (d = '0' + d);\n      (m.length === 1) && (m = '0' + m);\n\n      let yyyymmdd = `${y}-${m}-${d}`;\n\n      return yyyymmdd;\n    }\n  \n  // Collapse all investment assets\n  collapseAll = () => {\n    this.setState({\n      showingAssets: false,\n    })\n  }\n\n  // Expand all investment assets\n  expandAll = () => {\n    this.setState({\n      showingAssets: true,\n    })\n  }\n\n  // Set date to user input\n  setDate = date => {\n    this.setState({\n      date: date\n    });\n  }\n  \n  render() {\n\n    let investments =\n      this.state.investments.map(investment => <Investment investment={investment} key={investment.id} showing={this.state.showingAssets} />)\n\n    let totalCost = \n      this.state.investments.reduce((acc, investment) => acc + investment.cost.$, 0).toLocaleString();\n\n    let totalShares =\n      this.state.investments.reduce((acc, investment) => acc + investment.quantity, 0).toLocaleString();\n\n    return (\n      <div className=\"app\">\n      <h1 className=\"title\">Carta Investor Services</h1>\n        <div className=\"options\">\n        <button onClick={this.collapseAll}>Collapse All</button>\n        <button onClick={this.expandAll}>Expand All</button>\n        <DatePicker selected={this.state.date} onChange={this.setDate} todayButton={\"Today\"} className=\"date-picker\"/>\n        <button onClick={this.getInvestments}>Search</button>\n      </div>\n        <table className=\"container\">\n          <tbody>\n            <tr>\n              <th><h1>Investment</h1></th>\n              <th><h1>Asset</h1></th>\n              <th><h1>Investment Date</h1></th>\n              <th><h1>Shares</h1></th>\n              <th><h1>Cost</h1></th>\n            </tr>\n            {investments}\n            <tr className=\"total\">\n              <td>Total</td>\n              <td></td>\n              <td></td>\n              <td>$ {totalShares}</td>\n              <td>$ {totalCost}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}